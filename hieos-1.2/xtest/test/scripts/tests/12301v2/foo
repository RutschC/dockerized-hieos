SRC_ROOT=c:\dev\vhgate\xds-xca\src
SHARED_LIBS=c:\dev\vhgate\xds-xca\src\SharedLibs
AXIS_LIBS=c:\dev\vhgate\xds-xca\src\SharedLibs\axis2-1.4.1
["tests", "12301v2"]
step retrieve_small
** ENDPOINT **: http://localhost:8080/axis2/services/xcaig
<xdsb:RetrieveDocumentSetResponse xmlns:xdsb="urn:ihe:iti:xds-b:2007"><rs:RegistryResponse xmlns:rs="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" status="urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Failure"><rs:RegistryErrorList><rs:RegistryError codeContext="RepositoryUniqueId XXXXXXXX not known by local community" errorCode="XDSUnknownRepositoryId" location="" severity="Error" /><rs:RegistryError codeContext="homeCommunityId missing or empty" errorCode="XDSMissingHomeCommunityId" location="" severity="Error" /></rs:RegistryErrorList></rs:RegistryResponse><xdsb:DocumentResponse><axis2ns3:HomeCommunityId xmlns:axis2ns3="urn:ihe:iti:xds-b:2007">urn:oid:1.3.6.1.4.1.21367.2009.1.2.2020</axis2ns3:HomeCommunityId><xdsb:RepositoryUniqueId>1.3.6.1.4.1.21367.2009.1.2.1010</xdsb:RepositoryUniqueId><xdsb:DocumentUniqueId>129.6.58.92.1012266</xdsb:DocumentUniqueId><xdsb:mimeType>text/plain</xdsb:mimeType><xdsb:Document>VGhpcyBpcyBteSBkb2N1bWVudC4KCkl0IGlzIGdyZWF0IQoK</xdsb:Document></xdsb:DocumentResponse></xdsb:RetrieveDocumentSetResponse>
homeCommunityID = urn:oid:1.3.6.1.4.1.21367.2009.1.2.2020
HomeCommunityID in response - OK!
Error: stepId=retrieve_small : Status is urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Failure, expected status is urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Success
step retrieve_big
** ENDPOINT **: http://localhost:8080/axis2/services/xcaig
<xdsb:RetrieveDocumentSetResponse xmlns:xdsb="urn:ihe:iti:xds-b:2007"><rs:RegistryResponse xmlns:rs="urn:oasis:names:tc:ebxml-regrep:xsd:rs:3.0" status="urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Success" /><xdsb:DocumentResponse><axis2ns5:HomeCommunityId xmlns:axis2ns5="urn:ihe:iti:xds-b:2007">urn:oid:1.3.6.1.4.1.21367.2009.1.2.2020</axis2ns5:HomeCommunityId><xdsb:RepositoryUniqueId>1.3.6.1.4.1.21367.2009.1.2.1010</xdsb:RepositoryUniqueId><xdsb:DocumentUniqueId>129.6.58.92.1012267</xdsb:DocumentUniqueId><xdsb:mimeType>text/xml</xdsb:mimeType><xdsb:Document>PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPD94bWwtc3R5bGVzaGVldCB0eXBlPSJ0ZXh0L3hzbCIgaHJlZj0iQ0NELnhzbCI/Pgo8IS0tIFRoZSBmb2xsb3dpbmcgc2FtcGxlIGRvY3VtZW50IGRlcGljdHMgYSBmaWN0aW9uYWwgY2hhcmFjdGVycyBoZWFsdGggc3VtbWFyeS4gQW55IHJlc2VtYmxhbmNlIHRvIGEgcmVhbCBwZXJzb24gaXMgY29pbmNpZGVudGFsLiAtLT4KCjxDbGluaWNhbERvY3VtZW50IHhzaTpzY2hlbWFMb2NhdGlvbj0idXJuOmhsNy1vcmc6djMgaHR0cDovL3hyZWcyLm5pc3QuZ292OjgwODAvaGl0c3BWYWxpZGF0aW9uL3NjaGVtYS9jZGFyMmMzMi9pbmZyYXN0cnVjdHVyZS9jZGEvQzMyX0NEQS54c2QiIHhtbG5zOnNkdGM9InVybjpobDctb3JnOnNkdGMiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhtbG5zPSJ1cm46aGw3LW9yZzp2MyI+CiAgPHR5cGVJZCBleHRlbnNpb249IlBPQ0RfSEQwMDAwNDAiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEuMyIvPgogIDx0ZW1wbGF0ZUlkIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNEQS9SMiIgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMy4yNy4xNzc2Ii8+CiAgPHRlbXBsYXRlSWQgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4xIi8+CiAgPHRlbXBsYXRlSWQgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSElUU1AvQzMyIiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjMyLjEiLz4KICA8aWQgZXh0ZW5zaW9uPSJMYWlrYSBDMzIgVGVzdCIgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iTGFpa2E6IEFuIE9wZW4gU291cmNlIEVIUiBUZXN0aW5nIEZyYW1ld29yayBwcm9qZWN0bGFpa2Eub3JnIiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjcyIi8+CiAgPGNvZGUgY29kZT0iMzQxMzMtOSIgZGlzcGxheU5hbWU9IlN1bW1hcml6YXRpb24gb2YgcGF0aWVudCBkYXRhIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuMSIvPgogIDx0aXRsZT5WQSBXVyBURUYgIzE8L3RpdGxlPgogIDxlZmZlY3RpdmVUaW1lIHZhbHVlPSIyMDA4MDUyMjEwMDg0NS0wNTAwIi8+CiAgPGNvbmZpZGVudGlhbGl0eUNvZGUvPgogIDxsYW5ndWFnZUNvZGUgY29kZT0iZW4tVVMiLz4KICA8cmVjb3JkVGFyZ2V0PgogICAgPHBhdGllbnRSb2xlPgogICAgICA8aWQgZXh0ZW5zaW9uPSIxMjM0NTY3ODkwIi8+CiAgICAgIDxhZGRyPgogICAgICAgIDxzdHJlZXRBZGRyZXNzTGluZT4xOTgwIEFnZ3JydHRvb2ZmIENvdXJ0PC9zdHJlZXRBZGRyZXNzTGluZT4KICAgICAgICA8Y2l0eT5EdWxsZXM8L2NpdHk+CiAgICAgICAgPHN0YXRlPlZBPC9zdGF0ZT4KICAgICAgICA8cG9zdGFsQ29kZT4yMDE2NTwvcG9zdGFsQ29kZT4KICAgICAgICA8Y291bnRyeT5VUzwvY291bnRyeT4KICAgICAgPC9hZGRyPgogICAgICA8dGVsZWNvbSB2YWx1ZT0idGVsOjcwMy01NTUtMzMxMSIgdXNlPSJIUCIvPgogICAgICA8dGVsZWNvbSB2YWx1ZT0idGVsOjcwMy01NTUtMjMzMiIgdXNlPSJXUCIvPgogICAgICA8dGVsZWNvbSB2YWx1ZT0ibWFpbHRvOmNhQHlhaG9vLmNvbSIvPgogICAgICA8cGF0aWVudD4KICAgICAgICA8bmFtZT4KICAgICAgICAgIDxwcmVmaXg+TXIuPC9wcmVmaXg+CiAgICAgICAgICA8Z2l2ZW4gcXVhbGlmaWVyPSJDTCI+Q3hleTwvZ2l2ZW4+CiAgICAgICAgICA8ZmFtaWx5IHF1YWxpZmllcj0iQlIiPkFhYWFjdHh5PC9mYW1pbHk+CiAgICAgICAgPC9uYW1lPgogICAgICAgIDxhZG1pbmlzdHJhdGl2ZUdlbmRlckNvZGUgY29kZT0iTSIgZGlzcGxheU5hbWU9Ik1hbGUiIGNvZGVTeXN0ZW1OYW1lPSJITDcgQWRtaW5pc3RyYXRpdmVHZW5kZXJDb2RlcyIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNS4xIj4KICAgICAgICAgIDxvcmlnaW5hbFRleHQ+QWRtaW5pc3RyYXRpdmVHZW5kZXIgY29kZXMgYXJlOiBNIChNYWxlKSwgRiAoRmVtYWxlKSBvciBVTiAoVW5kaWZmZXJlbnRpYXRlZCkuPC9vcmlnaW5hbFRleHQ+CiAgICAgICAgPC9hZG1pbmlzdHJhdGl2ZUdlbmRlckNvZGU+CiAgICAgICAgPGJpcnRoVGltZSB2YWx1ZT0iMTk4MDA4MDgiLz4KICAgICAgICA8bWFyaXRhbFN0YXR1c0NvZGUgY29kZT0iTSIgZGlzcGxheU5hbWU9Ik1hcnJpZWQiIGNvZGVTeXN0ZW1OYW1lPSJNYXJpdGFsU3RhdHVzQ29kZSIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNS4yIi8+CiAgICAgICAgPHJlbGlnaW91c0FmZmlsaWF0aW9uQ29kZSBjb2RlPSIxMDEzIiBkaXNwbGF5TmFtZT0iQ2hyaXN0aWFuIiBjb2RlU3lzdGVtTmFtZT0iUmVsaWdpb3VzIEFmZmlsaWF0aW9uIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My41LjEwNzYiLz4KICAgICAgICA8bGFuZ3VhZ2VDb21tdW5pY2F0aW9uPgogICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMy44OC4xMS4zMi4yIi8+CiAgICAgICAgICA8bGFuZ3VhZ2VDb2RlIGNvZGU9ImVuLVVTIi8+CiAgICAgICAgICA8cHJlZmVyZW5jZUluZCB2YWx1ZT0iZmFsc2UiLz4KICAgICAgICA8L2xhbmd1YWdlQ29tbXVuaWNhdGlvbj4KICAgICAgPC9wYXRpZW50PgogICAgPC9wYXRpZW50Um9sZT4KICA8L3JlY29yZFRhcmdldD4KICA8YXV0aG9yPgogICAgPHRpbWUgdmFsdWU9IjIwMDgwNDE3Ii8+CiAgICA8YXNzaWduZWRBdXRob3I+CiAgICAgIDxpZCByb290PSJDMzIwNDE3MjAwODAwMDAwMDAwMDAxIi8+CiAgICAgIDxhc3NpZ25lZFBlcnNvbj4KICAgICAgICA8bmFtZT4KICAgICAgICA8L25hbWU+CiAgICAgIDwvYXNzaWduZWRQZXJzb24+CiAgICAgIDxyZXByZXNlbnRlZE9yZ2FuaXphdGlvbj4KICAgICAgICA8aWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTkuNSIvPgogICAgICAgIDxuYW1lPkRlcGVydG1lbnQgb2YgVmV0ZXJhbnMgQWZmYWlyczwvbmFtZT4KICAgICAgPC9yZXByZXNlbnRlZE9yZ2FuaXphdGlvbj4KICAgIDwvYXNzaWduZWRBdXRob3I+CiAgPC9hdXRob3I+CiAgPGN1c3RvZGlhbj4KICAgIDxhc3NpZ25lZEN1c3RvZGlhbj4KICAgICAgPHJlcHJlc2VudGVkQ3VzdG9kaWFuT3JnYW5pemF0aW9uPgogICAgICAgIDxpZC8+CiAgICAgIDwvcmVwcmVzZW50ZWRDdXN0b2RpYW5Pcmdhbml6YXRpb24+CiAgICA8L2Fzc2lnbmVkQ3VzdG9kaWFuPgogIDwvY3VzdG9kaWFuPgogIDxwYXJ0aWNpcGFudCB0eXBlQ29kZT0iSU5EIj4KICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEuMzIuMyIvPgogICAgPHRpbWU+CiAgICAgIDxsb3cgdmFsdWU9IjE5OTkwOTE5Ii8+CiAgICA8L3RpbWU+CiAgICA8YXNzb2NpYXRlZEVudGl0eSBjbGFzc0NvZGU9Ik5PSyI+CiAgICAgIDxjb2RlIGNvZGU9IldJRkUiIGRpc3BsYXlOYW1lPSJXaWZlIiBjb2RlU3lzdGVtTmFtZT0iUm9sZUNvZGUiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjUuMTExIi8+CiAgICAgIDxhZGRyPgogICAgICAgIDxzdHJlZXRBZGRyZXNzTGluZT4xOTgwIEFnZ3JydHRvb2ZmIENvdXJ0PC9zdHJlZXRBZGRyZXNzTGluZT4KICAgICAgICA8Y2l0eT5EdWxsZXM8L2NpdHk+CiAgICAgICAgPHN0YXRlPlZBPC9zdGF0ZT4KICAgICAgICA8cG9zdGFsQ29kZT4yMDE2NTwvcG9zdGFsQ29kZT4KICAgICAgICA8Y291bnRyeT5VUzwvY291bnRyeT4KICAgICAgPC9hZGRyPgogICAgICA8dGVsZWNvbSB2YWx1ZT0idGVsOjcwMy01NTUtMTk4MCIgdXNlPSJIUCIvPgogICAgICA8dGVsZWNvbSB2YWx1ZT0idGVsOjcwMy01NTUtNDQ2NiIgdXNlPSJXUCIvPgogICAgICA8dGVsZWNvbSB2YWx1ZT0ibWFpbHRvOndqYUBtc24uY29tIi8+CiAgICAgIDxhc3NvY2lhdGVkUGVyc29uPgogICAgICAgIDxuYW1lPgogICAgICAgICAgPHByZWZpeD5NcnMuPC9wcmVmaXg+CiAgICAgICAgICA8Z2l2ZW4gcXVhbGlmaWVyPSJDTCI+Smlra2tsYWFuPC9naXZlbj4KICAgICAgICAgIDxmYW1pbHkgcXVhbGlmaWVyPSJCUiI+QWFhYWN0eHk8L2ZhbWlseT4KICAgICAgICA8L25hbWU+CiAgICAgIDwvYXNzb2NpYXRlZFBlcnNvbj4KICAgIDwvYXNzb2NpYXRlZEVudGl0eT4KICA8L3BhcnRpY2lwYW50PgogIDxkb2N1bWVudGF0aW9uT2Y+CiAgICA8c2VydmljZUV2ZW50IGNsYXNzQ29kZT0iUENQUiI+CiAgICAgIDxlZmZlY3RpdmVUaW1lPgogICAgICAgIDxsb3cgdmFsdWU9IjAiLz4KICAgICAgICA8aGlnaCB2YWx1ZT0iMjAxMCIvPgogICAgICA8L2VmZmVjdGl2ZVRpbWU+CiAgICAgIDxwZXJmb3JtZXIgdHlwZUNvZGU9IlBSRiI+CiAgICAgICAgPHRlbXBsYXRlSWQgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSElUU1AvQzMyIiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjMyLjQiLz4KICAgICAgICA8ZnVuY3Rpb25Db2RlIGNvZGU9IlBQIiBkaXNwbGF5TmFtZT0iUHJpbWFyeSBDYXJlIFByb3ZpZGVyIiBjb2RlU3lzdGVtTmFtZT0iUHJvdmlkZXIgUm9sZSIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuMTIuNDQzIj4KICAgICAgICA8L2Z1bmN0aW9uQ29kZT4KICAgICAgICA8dGltZT4KICAgICAgICAgIDxsb3cgdmFsdWU9IjE5OTkwNzA3Ii8+CiAgICAgICAgPC90aW1lPgogICAgICAgIDxhc3NpZ25lZEVudGl0eT4KICAgICAgICAgIDxpZC8+CiAgICAgICAgICA8Y29kZSBjb2RlPSIzMjAwMDAwMDBYIiBkaXNwbGF5TmFtZT0iUmVzaWRlbnRpYWwgVHJlYXRtZW50IEZhY2lsaXRpZXMiIGNvZGVTeXN0ZW1OYW1lPSJQcm92aWRlckNvZGVzIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEwMSIvPgogICAgICAgICAgPGFkZHI+CiAgICAgICAgICAgIDxzdHJlZXRBZGRyZXNzTGluZT41NDQ1IFJoaG9qamtrIEJsdmQ8L3N0cmVldEFkZHJlc3NMaW5lPgogICAgICAgICAgICA8c3RyZWV0QWRkcmVzc0xpbmU+U3VpdGUgIzY3ODk8L3N0cmVldEFkZHJlc3NMaW5lPgogICAgICAgICAgICA8Y2l0eT5EdWxsZXM8L2NpdHk+CiAgICAgICAgICAgIDxzdGF0ZT5WQTwvc3RhdGU+CiAgICAgICAgICAgIDxwb3N0YWxDb2RlPjIwMTY1PC9wb3N0YWxDb2RlPgogICAgICAgICAgICA8Y291bnRyeT5VUzwvY291bnRyeT4KICAgICAgICAgIDwvYWRkcj4KICAgICAgICAgIDx0ZWxlY29tIHZhbHVlPSJ0ZWw6NzAzLTU1NS04OTk4IiB1c2U9IldQIi8+CiAgICAgICAgICA8YXNzaWduZWRQZXJzb24+CiAgICAgICAgICAgIDxuYW1lPgogICAgICAgICAgICAgIDxwcmVmaXg+RHIuPC9wcmVmaXg+CiAgICAgICAgICAgICAgPGdpdmVuIHF1YWxpZmllcj0iQ0wiPlBlcHBwbHJycjwvZ2l2ZW4+CiAgICAgICAgICAgICAgPGZhbWlseSBxdWFsaWZpZXI9IkJSIj5XZHNzamhoZWVlbTwvZmFtaWx5PgogICAgICAgICAgICA8L25hbWU+CiAgICAgICAgICA8L2Fzc2lnbmVkUGVyc29uPgogICAgICAgIDwvYXNzaWduZWRFbnRpdHk+CiAgICAgIDwvcGVyZm9ybWVyPgogICAgPC9zZXJ2aWNlRXZlbnQ+CiAgPC9kb2N1bWVudGF0aW9uT2Y+CiAgPGNvbXBvbmVudD4KICAgIDxzdHJ1Y3R1cmVkQm9keT4KICAgICAgPGNvbXBvbmVudD4KICAgICAgICA8c2VjdGlvbj4KICAgICAgICAgIDx0ZW1wbGF0ZUlkIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4xMSIvPgogICAgICAgICAgPGNvZGUgY29kZT0iMTE0NTAtNCIgZGlzcGxheU5hbWU9IlByb2JsZW1zIiBjb2RlU3lzdGVtTmFtZT0iTE9JTkMiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuMSIvPgogICAgICAgICAgPHRpdGxlPkNvbmRpdGlvbnMgb3IgUHJvYmxlbXM8L3RpdGxlPgogICAgICAgICAgPHRleHQ+CiAgICAgICAgICAgIDx0YWJsZSBib3JkZXI9IjEiIHdpZHRoPSIxMDAlIj4KICAgICAgICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgIDx0aD5Qcm9ibGVtIE5hbWU8L3RoPgogICAgICAgICAgICAgICAgICA8dGg+UHJvYmxlbSBUeXBlPC90aD4KICAgICAgICAgICAgICAgICAgPHRoPlByb2JsZW0gRGF0ZTwvdGg+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRlbnQgSUQ9InByb2JsZW0tMTAyMTUyMDY3MyI+UGF0aWVudCBjb21wbGFpbnMgb2YgcGFpbiBpbiB0aGUgcmlnaHQgZm9vdC48L2NvbnRlbnQ+CiAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZD5Db21wbGFpbnQ8L3RkPgogICAgICAgICAgICAgICAgICA8dGQ+MjAwODAyMTU8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgIDxjb250ZW50IElEPSJwcm9ibGVtLTEwMjE1MjA2NzQiPnNvbWUgZGlzY29sb3JhdGlvbiBvZiB0aGUgc2tpbiBvbiByaWdodCBmb290LzJuZCB0b2UuPC9jb250ZW50PgogICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICA8dGQ+RmluZGluZzwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZD4yMDA4MDIxNTwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRlbnQgSUQ9InByb2JsZW0tMTAyMTUyMDY3NSI+Um9hZHNpZSBib21iIGluanVyeS48L2NvbnRlbnQ+CiAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZD5Qcm9ibGVtPC90ZD4KICAgICAgICAgICAgICAgICAgPHRkPjIwMDYwMTAxPC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICA8Y29udGVudCBJRD0icHJvYmxlbS0xMDIxNTIwNjc2Ij5QcmlvciBzdXJnZXJpZXMgdG8gdGhlIHJpZ2h0IGxlZyBvY2N1cnJlZCBhdCBzZXZlcmFsIEFybXkgTWVkaWNhbCBUcmVhdG1lbnQgRmFjaWxpdGllcyBmb3Igc2hyYXBuZWwgcmVtb3ZhbC48L2NvbnRlbnQ+CiAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZD5GaW5kaW5nPC90ZD4KICAgICAgICAgICAgICAgICAgPHRkPjIwMDYwMTAxPC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICA8Y29udGVudCBJRD0icHJvYmxlbS0xMDIxNTIwNjc3Ij5YLXJheSBvZiB0aGUgcmlnaHQgZm9vdCBzaG93cyBhIHJhZGlvLW9wYXF1ZSBmcmFnbWVudCBvdmVybHlpbmcgdGhlIGRpc3RhbCAybmQgbWV0YXRhcnNhbCBib25lPC9jb250ZW50PgogICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICA8dGQ+RmluZGluZzwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZD4yMDA4MDIxNTwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRlbnQgSUQ9InByb2JsZW0tMTAyMTUyMDY3OCI+MzA5LjgxLVBvc3R0cmF1bWF0aWMgc3RyZXNzIGRpc29yZGVyPC9jb250ZW50PgogICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICA8dGQ+RGlhZ25vc2lzPC90ZD4KICAgICAgICAgICAgICAgICAgPHRkPjIwMDYwMTAxPC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICA8Y29udGVudCBJRD0icHJvYmxlbS0xMDIxNTIwNjc5Ij5TdXJnZXJ5IGFkdmlzZWQgZm9yIGNvbGxlY3Rpb24gb2YgdGhlIGZyYWdtZW50LCBzdXJyb3VuZGluZyB0aXNzdWUgYW5kIGxhdmFnZSBmbHVpZDwvY29udGVudD4KICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgPHRkPkZpbmRpbmc8L3RkPgogICAgICAgICAgICAgICAgICA8dGQ+MjAwODAyMTc8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgIDxjb250ZW50IElEPSJwcm9ibGVtLTEwMjE1MjA2ODAiPkNQVCAyMDUyMC1SZW1vdmFsIG9mIGZvcmVpZ24gYm9keSBpbiBtdXNjbGUgb3IgdGVuZG9uIHNoZWF0aDsgc2ltcGxlPC9jb250ZW50PgogICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICA8dGQ+Q29uZGl0aW9uPC90ZD4KICAgICAgICAgICAgICAgICAgPHRkPjIwMDgwMzA3PC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICA8Y29udGVudCBJRD0icHJvYmxlbS0xMDIxNTIwNjgxIj5VcmluZSBiaW8tbW9uaXRvcmluZyBraXQgcmVjb21tZW5kZWQgZm9yIGhvbWUgdXNlLjwvY29udGVudD4KICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgPHRkPkZpbmRpbmc8L3RkPgogICAgICAgICAgICAgICAgICA8dGQ+MjAwODA0MDM8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgIDxjb250ZW50IElEPSJwcm9ibGVtLTEwMjE1MjA2ODIiPjQwMS4xLUh5cGVydGVuc2lvbjwvY29udGVudD4KICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgPHRkPkRpYWdub3NpczwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZD4yMDA2MDEwMTwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRlbnQgSUQ9InByb2JsZW0tMTAyMTUyMDY4MyI+Rm9vdCBsdW1wIGRvcnN1bSBvZiB0aGUgZm9vdCBqdXN0IGJlbG93IHRoZSAybmQgdG9lPC9jb250ZW50PgogICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICA8dGQ+U3ltcHRvbTwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZD4yMDA4MDIxNTwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRlbnQgSUQ9InByb2JsZW0tMTAyMTUyMDY4NCI+VVJJTkUgIEhlYXZ5IE1ldGFsOiAgRmUgMjVtZy8yNGgsIENVIDAuMDNtZy8yNGgsIFBiIDAuMm1nLzI0aDwvY29udGVudD4KICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgPHRkPkZpbmRpbmc8L3RkPgogICAgICAgICAgICAgICAgICA8dGQ+MjAwODA2MTU8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgPC90ZXh0PgogICAgICAgICAgPGVudHJ5PgogICAgICAgICAgICA8YWN0IGNsYXNzQ29kZT0iQUNUIiBtb29kQ29kZT0iRVZOIj4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJDQ0QiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuMjciLz4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUC9DMzIiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEuMzIuNyIvPgogICAgICAgICAgICAgIDxpZC8+CiAgICAgICAgICAgICAgPGNvZGUgbnVsbEZsYXZvcj0iTkEiLz4KICAgICAgICAgICAgICA8ZWZmZWN0aXZlVGltZT4KICAgICAgICAgICAgICAgIDxsb3cgdmFsdWU9IjIwMDgwMjE1Ii8+CiAgICAgICAgICAgICAgICA8aGlnaCBudWxsRmxhdm9yPSJVTksiLz4KICAgICAgICAgICAgICA8L2VmZmVjdGl2ZVRpbWU+CiAgICAgICAgICAgICAgPGVudHJ5UmVsYXRpb25zaGlwIHR5cGVDb2RlPSJTVUJKIj4KICAgICAgICAgICAgICAgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4yOCIvPgogICAgICAgICAgICAgICAgICA8Y29kZSBjb2RlPSI0MDk1ODYwMDYiIGRpc3BsYXlOYW1lPSJDb21wbGFpbnQiIGNvZGVTeXN0ZW1OYW1lPSJTTk9NRUQgQ1QiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuOTYiLz4KICAgICAgICAgICAgICAgICAgPHRleHQ+CiAgICAgICAgICAgICAgICAgICAgPHJlZmVyZW5jZSB2YWx1ZT0iI3Byb2JsZW0tMTAyMTUyMDY3MyIvPgogICAgICAgICAgICAgICAgICA8L3RleHQ+CiAgICAgICAgICAgICAgICAgIDxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPgogICAgICAgICAgICAgICAgPC9vYnNlcnZhdGlvbj4KICAgICAgICAgICAgICA8L2VudHJ5UmVsYXRpb25zaGlwPgogICAgICAgICAgICA8L2FjdD4KICAgICAgICAgIDwvZW50cnk+CiAgICAgICAgICA8ZW50cnk+CiAgICAgICAgICAgIDxhY3QgY2xhc3NDb2RlPSJBQ1QiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4yNyIvPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkhJVFNQL0MzMiIgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMy44OC4xMS4zMi43Ii8+CiAgICAgICAgICAgICAgPGlkLz4KICAgICAgICAgICAgICA8Y29kZSBudWxsRmxhdm9yPSJOQSIvPgogICAgICAgICAgICAgIDxlZmZlY3RpdmVUaW1lPgogICAgICAgICAgICAgICAgPGxvdyB2YWx1ZT0iMjAwODAyMTUiLz4KICAgICAgICAgICAgICAgIDxoaWdoIG51bGxGbGF2b3I9IlVOSyIvPgogICAgICAgICAgICAgIDwvZWZmZWN0aXZlVGltZT4KICAgICAgICAgICAgICA8ZW50cnlSZWxhdGlvbnNoaXAgdHlwZUNvZGU9IlNVQkoiPgogICAgICAgICAgICAgICAgPG9ic2VydmF0aW9uIGNsYXNzQ29kZT0iT0JTIiBtb29kQ29kZT0iRVZOIj4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4xLjI4Ii8+CiAgICAgICAgICAgICAgICAgIDxjb2RlIGNvZGU9IjQwNDY4NDAwMyIgZGlzcGxheU5hbWU9IkZpbmRpbmciIGNvZGVTeXN0ZW1OYW1lPSJTTk9NRUQgQ1QiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuOTYiLz4KICAgICAgICAgICAgICAgICAgPHRleHQ+CiAgICAgICAgICAgICAgICAgICAgPHJlZmVyZW5jZSB2YWx1ZT0iI3Byb2JsZW0tMTAyMTUyMDY3NCIvPgogICAgICAgICAgICAgICAgICA8L3RleHQ+CiAgICAgICAgICAgICAgICAgIDxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPgogICAgICAgICAgICAgICAgPC9vYnNlcnZhdGlvbj4KICAgICAgICAgICAgICA8L2VudHJ5UmVsYXRpb25zaGlwPgogICAgICAgICAgICA8L2FjdD4KICAgICAgICAgIDwvZW50cnk+CiAgICAgICAgICA8ZW50cnk+CiAgICAgICAgICAgIDxhY3QgY2xhc3NDb2RlPSJBQ1QiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4yNyIvPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkhJVFNQL0MzMiIgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMy44OC4xMS4zMi43Ii8+CiAgICAgICAgICAgICAgPGlkLz4KICAgICAgICAgICAgICA8Y29kZSBudWxsRmxhdm9yPSJOQSIvPgogICAgICAgICAgICAgIDxlZmZlY3RpdmVUaW1lPgogICAgICAgICAgICAgICAgPGxvdyB2YWx1ZT0iMjAwNjAxMDEiLz4KICAgICAgICAgICAgICAgIDxoaWdoIG51bGxGbGF2b3I9IlVOSyIvPgogICAgICAgICAgICAgIDwvZWZmZWN0aXZlVGltZT4KICAgICAgICAgICAgICA8ZW50cnlSZWxhdGlvbnNoaXAgdHlwZUNvZGU9IlNVQkoiPgogICAgICAgICAgICAgICAgPG9ic2VydmF0aW9uIGNsYXNzQ29kZT0iT0JTIiBtb29kQ29kZT0iRVZOIj4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4xLjI4Ii8+CiAgICAgICAgICAgICAgICAgIDxjb2RlIGNvZGU9IjU1NjA3MDA2IiBkaXNwbGF5TmFtZT0iUHJvYmxlbSIgY29kZVN5c3RlbU5hbWU9IlNOT01FRCBDVCIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi45NiIvPgogICAgICAgICAgICAgICAgICA8dGV4dD4KICAgICAgICAgICAgICAgICAgICA8cmVmZXJlbmNlIHZhbHVlPSIjcHJvYmxlbS0xMDIxNTIwNjc1Ii8+CiAgICAgICAgICAgICAgICAgIDwvdGV4dD4KICAgICAgICAgICAgICAgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+CiAgICAgICAgICAgICAgICA8L29ic2VydmF0aW9uPgogICAgICAgICAgICAgIDwvZW50cnlSZWxhdGlvbnNoaXA+CiAgICAgICAgICAgIDwvYWN0PgogICAgICAgICAgPC9lbnRyeT4KICAgICAgICAgIDxlbnRyeT4KICAgICAgICAgICAgPGFjdCBjbGFzc0NvZGU9IkFDVCIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4xLjI3Ii8+CiAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSElUU1AvQzMyIiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjMyLjciLz4KICAgICAgICAgICAgICA8aWQvPgogICAgICAgICAgICAgIDxjb2RlIG51bGxGbGF2b3I9Ik5BIi8+CiAgICAgICAgICAgICAgPGVmZmVjdGl2ZVRpbWU+CiAgICAgICAgICAgICAgICA8bG93IHZhbHVlPSIyMDA2MDEwMSIvPgogICAgICAgICAgICAgICAgPGhpZ2ggbnVsbEZsYXZvcj0iVU5LIi8+CiAgICAgICAgICAgICAgPC9lZmZlY3RpdmVUaW1lPgogICAgICAgICAgICAgIDxlbnRyeVJlbGF0aW9uc2hpcCB0eXBlQ29kZT0iU1VCSiI+CiAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJDQ0QiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuMjgiLz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iNDA0Njg0MDAzIiBkaXNwbGF5TmFtZT0iRmluZGluZyIgY29kZVN5c3RlbU5hbWU9IlNOT01FRCBDVCIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi45NiIvPgogICAgICAgICAgICAgICAgICA8dGV4dD4KICAgICAgICAgICAgICAgICAgICA8cmVmZXJlbmNlIHZhbHVlPSIjcHJvYmxlbS0xMDIxNTIwNjc2Ii8+CiAgICAgICAgICAgICAgICAgIDwvdGV4dD4KICAgICAgICAgICAgICAgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+CiAgICAgICAgICAgICAgICA8L29ic2VydmF0aW9uPgogICAgICAgICAgICAgIDwvZW50cnlSZWxhdGlvbnNoaXA+CiAgICAgICAgICAgIDwvYWN0PgogICAgICAgICAgPC9lbnRyeT4KICAgICAgICAgIDxlbnRyeT4KICAgICAgICAgICAgPGFjdCBjbGFzc0NvZGU9IkFDVCIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4xLjI3Ii8+CiAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSElUU1AvQzMyIiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjMyLjciLz4KICAgICAgICAgICAgICA8aWQvPgogICAgICAgICAgICAgIDxjb2RlIG51bGxGbGF2b3I9Ik5BIi8+CiAgICAgICAgICAgICAgPGVmZmVjdGl2ZVRpbWU+CiAgICAgICAgICAgICAgICA8bG93IHZhbHVlPSIyMDA4MDIxNSIvPgogICAgICAgICAgICAgICAgPGhpZ2ggbnVsbEZsYXZvcj0iVU5LIi8+CiAgICAgICAgICAgICAgPC9lZmZlY3RpdmVUaW1lPgogICAgICAgICAgICAgIDxlbnRyeVJlbGF0aW9uc2hpcCB0eXBlQ29kZT0iU1VCSiI+CiAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJDQ0QiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuMjgiLz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iNDA0Njg0MDAzIiBkaXNwbGF5TmFtZT0iRmluZGluZyIgY29kZVN5c3RlbU5hbWU9IlNOT01FRCBDVCIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi45NiIvPgogICAgICAgICAgICAgICAgICA8dGV4dD4KICAgICAgICAgICAgICAgICAgICA8cmVmZXJlbmNlIHZhbHVlPSIjcHJvYmxlbS0xMDIxNTIwNjc3Ii8+CiAgICAgICAgICAgICAgICAgIDwvdGV4dD4KICAgICAgICAgICAgICAgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+CiAgICAgICAgICAgICAgICA8L29ic2VydmF0aW9uPgogICAgICAgICAgICAgIDwvZW50cnlSZWxhdGlvbnNoaXA+CiAgICAgICAgICAgIDwvYWN0PgogICAgICAgICAgPC9lbnRyeT4KICAgICAgICAgIDxlbnRyeT4KICAgICAgICAgICAgPGFjdCBjbGFzc0NvZGU9IkFDVCIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4xLjI3Ii8+CiAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSElUU1AvQzMyIiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjMyLjciLz4KICAgICAgICAgICAgICA8aWQvPgogICAgICAgICAgICAgIDxjb2RlIG51bGxGbGF2b3I9Ik5BIi8+CiAgICAgICAgICAgICAgPGVmZmVjdGl2ZVRpbWU+CiAgICAgICAgICAgICAgICA8bG93IHZhbHVlPSIyMDA2MDEwMSIvPgogICAgICAgICAgICAgICAgPGhpZ2ggbnVsbEZsYXZvcj0iVU5LIi8+CiAgICAgICAgICAgICAgPC9lZmZlY3RpdmVUaW1lPgogICAgICAgICAgICAgIDxlbnRyeVJlbGF0aW9uc2hpcCB0eXBlQ29kZT0iU1VCSiI+CiAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJDQ0QiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuMjgiLz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iMjgyMjkxMDA5IiBkaXNwbGF5TmFtZT0iRGlhZ25vc2lzIiBjb2RlU3lzdGVtTmFtZT0iU05PTUVEIENUIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2Ii8+CiAgICAgICAgICAgICAgICAgIDx0ZXh0PgogICAgICAgICAgICAgICAgICAgIDxyZWZlcmVuY2UgdmFsdWU9IiNwcm9ibGVtLTEwMjE1MjA2NzgiLz4KICAgICAgICAgICAgICAgICAgPC90ZXh0PgogICAgICAgICAgICAgICAgICA8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICAgIDwvb2JzZXJ2YXRpb24+CiAgICAgICAgICAgICAgPC9lbnRyeVJlbGF0aW9uc2hpcD4KICAgICAgICAgICAgPC9hY3Q+CiAgICAgICAgICA8L2VudHJ5PgogICAgICAgICAgPGVudHJ5PgogICAgICAgICAgICA8YWN0IGNsYXNzQ29kZT0iQUNUIiBtb29kQ29kZT0iRVZOIj4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJDQ0QiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuMjciLz4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUC9DMzIiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEuMzIuNyIvPgogICAgICAgICAgICAgIDxpZC8+CiAgICAgICAgICAgICAgPGNvZGUgbnVsbEZsYXZvcj0iTkEiLz4KICAgICAgICAgICAgICA8ZWZmZWN0aXZlVGltZT4KICAgICAgICAgICAgICAgIDxsb3cgdmFsdWU9IjIwMDgwMjE3Ii8+CiAgICAgICAgICAgICAgICA8aGlnaCBudWxsRmxhdm9yPSJVTksiLz4KICAgICAgICAgICAgICA8L2VmZmVjdGl2ZVRpbWU+CiAgICAgICAgICAgICAgPGVudHJ5UmVsYXRpb25zaGlwIHR5cGVDb2RlPSJTVUJKIj4KICAgICAgICAgICAgICAgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4yOCIvPgogICAgICAgICAgICAgICAgICA8Y29kZSBjb2RlPSI0MDQ2ODQwMDMiIGRpc3BsYXlOYW1lPSJGaW5kaW5nIiBjb2RlU3lzdGVtTmFtZT0iU05PTUVEIENUIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2Ii8+CiAgICAgICAgICAgICAgICAgIDx0ZXh0PgogICAgICAgICAgICAgICAgICAgIDxyZWZlcmVuY2UgdmFsdWU9IiNwcm9ibGVtLTEwMjE1MjA2NzkiLz4KICAgICAgICAgICAgICAgICAgPC90ZXh0PgogICAgICAgICAgICAgICAgICA8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICAgIDwvb2JzZXJ2YXRpb24+CiAgICAgICAgICAgICAgPC9lbnRyeVJlbGF0aW9uc2hpcD4KICAgICAgICAgICAgPC9hY3Q+CiAgICAgICAgICA8L2VudHJ5PgogICAgICAgICAgPGVudHJ5PgogICAgICAgICAgICA8YWN0IGNsYXNzQ29kZT0iQUNUIiBtb29kQ29kZT0iRVZOIj4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJDQ0QiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuMjciLz4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUC9DMzIiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEuMzIuNyIvPgogICAgICAgICAgICAgIDxpZC8+CiAgICAgICAgICAgICAgPGNvZGUgbnVsbEZsYXZvcj0iTkEiLz4KICAgICAgICAgICAgICA8ZWZmZWN0aXZlVGltZT4KICAgICAgICAgICAgICAgIDxsb3cgdmFsdWU9IjIwMDgwMzA3Ii8+CiAgICAgICAgICAgICAgICA8aGlnaCBudWxsRmxhdm9yPSJVTksiLz4KICAgICAgICAgICAgICA8L2VmZmVjdGl2ZVRpbWU+CiAgICAgICAgICAgICAgPGVudHJ5UmVsYXRpb25zaGlwIHR5cGVDb2RlPSJTVUJKIj4KICAgICAgICAgICAgICAgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4yOCIvPgogICAgICAgICAgICAgICAgICA8Y29kZSBjb2RlPSI2NDU3MjAwMSIgZGlzcGxheU5hbWU9IkNvbmRpdGlvbiIgY29kZVN5c3RlbU5hbWU9IlNOT01FRCBDVCIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi45NiIvPgogICAgICAgICAgICAgICAgICA8dGV4dD4KICAgICAgICAgICAgICAgICAgICA8cmVmZXJlbmNlIHZhbHVlPSIjcHJvYmxlbS0xMDIxNTIwNjgwIi8+CiAgICAgICAgICAgICAgICAgIDwvdGV4dD4KICAgICAgICAgICAgICAgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+CiAgICAgICAgICAgICAgICA8L29ic2VydmF0aW9uPgogICAgICAgICAgICAgIDwvZW50cnlSZWxhdGlvbnNoaXA+CiAgICAgICAgICAgIDwvYWN0PgogICAgICAgICAgPC9lbnRyeT4KICAgICAgICAgIDxlbnRyeT4KICAgICAgICAgICAgPGFjdCBjbGFzc0NvZGU9IkFDVCIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4xLjI3Ii8+CiAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSElUU1AvQzMyIiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjMyLjciLz4KICAgICAgICAgICAgICA8aWQvPgogICAgICAgICAgICAgIDxjb2RlIG51bGxGbGF2b3I9Ik5BIi8+CiAgICAgICAgICAgICAgPGVmZmVjdGl2ZVRpbWU+CiAgICAgICAgICAgICAgICA8bG93IHZhbHVlPSIyMDA4MDQwMyIvPgogICAgICAgICAgICAgICAgPGhpZ2ggbnVsbEZsYXZvcj0iVU5LIi8+CiAgICAgICAgICAgICAgPC9lZmZlY3RpdmVUaW1lPgogICAgICAgICAgICAgIDxlbnRyeVJlbGF0aW9uc2hpcCB0eXBlQ29kZT0iU1VCSiI+CiAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJDQ0QiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuMjgiLz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iNDA0Njg0MDAzIiBkaXNwbGF5TmFtZT0iRmluZGluZyIgY29kZVN5c3RlbU5hbWU9IlNOT01FRCBDVCIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi45NiIvPgogICAgICAgICAgICAgICAgICA8dGV4dD4KICAgICAgICAgICAgICAgICAgICA8cmVmZXJlbmNlIHZhbHVlPSIjcHJvYmxlbS0xMDIxNTIwNjgxIi8+CiAgICAgICAgICAgICAgICAgIDwvdGV4dD4KICAgICAgICAgICAgICAgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+CiAgICAgICAgICAgICAgICA8L29ic2VydmF0aW9uPgogICAgICAgICAgICAgIDwvZW50cnlSZWxhdGlvbnNoaXA+CiAgICAgICAgICAgIDwvYWN0PgogICAgICAgICAgPC9lbnRyeT4KICAgICAgICAgIDxlbnRyeT4KICAgICAgICAgICAgPGFjdCBjbGFzc0NvZGU9IkFDVCIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4xLjI3Ii8+CiAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSElUU1AvQzMyIiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjMyLjciLz4KICAgICAgICAgICAgICA8aWQvPgogICAgICAgICAgICAgIDxjb2RlIG51bGxGbGF2b3I9Ik5BIi8+CiAgICAgICAgICAgICAgPGVmZmVjdGl2ZVRpbWU+CiAgICAgICAgICAgICAgICA8bG93IHZhbHVlPSIyMDA2MDEwMSIvPgogICAgICAgICAgICAgICAgPGhpZ2ggbnVsbEZsYXZvcj0iVU5LIi8+CiAgICAgICAgICAgICAgPC9lZmZlY3RpdmVUaW1lPgogICAgICAgICAgICAgIDxlbnRyeVJlbGF0aW9uc2hpcCB0eXBlQ29kZT0iU1VCSiI+CiAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJDQ0QiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuMjgiLz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iMjgyMjkxMDA5IiBkaXNwbGF5TmFtZT0iRGlhZ25vc2lzIiBjb2RlU3lzdGVtTmFtZT0iU05PTUVEIENUIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2Ii8+CiAgICAgICAgICAgICAgICAgIDx0ZXh0PgogICAgICAgICAgICAgICAgICAgIDxyZWZlcmVuY2UgdmFsdWU9IiNwcm9ibGVtLTEwMjE1MjA2ODIiLz4KICAgICAgICAgICAgICAgICAgPC90ZXh0PgogICAgICAgICAgICAgICAgICA8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICAgIDwvb2JzZXJ2YXRpb24+CiAgICAgICAgICAgICAgPC9lbnRyeVJlbGF0aW9uc2hpcD4KICAgICAgICAgICAgPC9hY3Q+CiAgICAgICAgICA8L2VudHJ5PgogICAgICAgICAgPGVudHJ5PgogICAgICAgICAgICA8YWN0IGNsYXNzQ29kZT0iQUNUIiBtb29kQ29kZT0iRVZOIj4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJDQ0QiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuMjciLz4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUC9DMzIiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEuMzIuNyIvPgogICAgICAgICAgICAgIDxpZC8+CiAgICAgICAgICAgICAgPGNvZGUgbnVsbEZsYXZvcj0iTkEiLz4KICAgICAgICAgICAgICA8ZWZmZWN0aXZlVGltZT4KICAgICAgICAgICAgICAgIDxsb3cgdmFsdWU9IjIwMDgwMjE1Ii8+CiAgICAgICAgICAgICAgICA8aGlnaCBudWxsRmxhdm9yPSJVTksiLz4KICAgICAgICAgICAgICA8L2VmZmVjdGl2ZVRpbWU+CiAgICAgICAgICAgICAgPGVudHJ5UmVsYXRpb25zaGlwIHR5cGVDb2RlPSJTVUJKIj4KICAgICAgICAgICAgICAgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4yOCIvPgogICAgICAgICAgICAgICAgICA8Y29kZSBjb2RlPSI0MTg3OTkwMDgiIGRpc3BsYXlOYW1lPSJTeW1wdG9tIiBjb2RlU3lzdGVtTmFtZT0iU05PTUVEIENUIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2Ii8+CiAgICAgICAgICAgICAgICAgIDx0ZXh0PgogICAgICAgICAgICAgICAgICAgIDxyZWZlcmVuY2UgdmFsdWU9IiNwcm9ibGVtLTEwMjE1MjA2ODMiLz4KICAgICAgICAgICAgICAgICAgPC90ZXh0PgogICAgICAgICAgICAgICAgICA8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICAgIDwvb2JzZXJ2YXRpb24+CiAgICAgICAgICAgICAgPC9lbnRyeVJlbGF0aW9uc2hpcD4KICAgICAgICAgICAgPC9hY3Q+CiAgICAgICAgICA8L2VudHJ5PgogICAgICAgICAgPGVudHJ5PgogICAgICAgICAgICA8YWN0IGNsYXNzQ29kZT0iQUNUIiBtb29kQ29kZT0iRVZOIj4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJDQ0QiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuMjciLz4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUC9DMzIiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEuMzIuNyIvPgogICAgICAgICAgICAgIDxpZC8+CiAgICAgICAgICAgICAgPGNvZGUgbnVsbEZsYXZvcj0iTkEiLz4KICAgICAgICAgICAgICA8ZWZmZWN0aXZlVGltZT4KICAgICAgICAgICAgICAgIDxsb3cgdmFsdWU9IjIwMDgwNjE1Ii8+CiAgICAgICAgICAgICAgICA8aGlnaCBudWxsRmxhdm9yPSJVTksiLz4KICAgICAgICAgICAgICA8L2VmZmVjdGl2ZVRpbWU+CiAgICAgICAgICAgICAgPGVudHJ5UmVsYXRpb25zaGlwIHR5cGVDb2RlPSJTVUJKIj4KICAgICAgICAgICAgICAgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4yOCIvPgogICAgICAgICAgICAgICAgICA8Y29kZSBjb2RlPSI0MDQ2ODQwMDMiIGRpc3BsYXlOYW1lPSJGaW5kaW5nIiBjb2RlU3lzdGVtTmFtZT0iU05PTUVEIENUIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2Ii8+CiAgICAgICAgICAgICAgICAgIDx0ZXh0PgogICAgICAgICAgICAgICAgICAgIDxyZWZlcmVuY2UgdmFsdWU9IiNwcm9ibGVtLTEwMjE1MjA2ODQiLz4KICAgICAgICAgICAgICAgICAgPC90ZXh0PgogICAgICAgICAgICAgICAgICA8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICAgIDwvb2JzZXJ2YXRpb24+CiAgICAgICAgICAgICAgPC9lbnRyeVJlbGF0aW9uc2hpcD4KICAgICAgICAgICAgPC9hY3Q+CiAgICAgICAgICA8L2VudHJ5PgogICAgICAgIDwvc2VjdGlvbj4KICAgICAgPC9jb21wb25lbnQ+CiAgICAgIDxjb21wb25lbnQ+CiAgICAgICAgPHNlY3Rpb24+CiAgICAgICAgICA8dGVtcGxhdGVJZCBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJDQ0QiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuMiIvPgogICAgICAgICAgPGNvZGUgY29kZT0iNDg3NjUtMiIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi4xIi8+CiAgICAgICAgICA8dGl0bGU+QWxsZXJnaWVzLCBBZHZlcnNlIFJlYWN0aW9ucywgQWxlcnRzPC90aXRsZT4KICAgICAgICAgIDx0ZXh0PgogICAgICAgICAgICA8dGFibGUgYm9yZGVyPSIxIiB3aWR0aD0iMTAwJSI+CiAgICAgICAgICAgICAgPHRoZWFkPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICA8dGg+U3Vic3RhbmNlPC90aD4KICAgICAgICAgICAgICAgICAgPHRoPkV2ZW50IFR5cGU8L3RoPgogICAgICAgICAgICAgICAgICA8dGg+U2V2ZXJpdHk8L3RoPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgPHRkPkxhY3Rvc2U8L3RkPgogICAgICAgICAgICAgICAgICA8dGQ+Rm9vZCBBbGxlcmd5PC90ZD4KICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgIDxjb250ZW50IElEPSJzZXZlcml0eS04MjMzNTg4ODciPk1pbGQ8L2NvbnRlbnQ+CiAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICA8dGQ+UGVuaWNpbGxpbjwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZD5EcnVnIEFsbGVyZ3k8L3RkPgogICAgICAgICAgICAgICAgICA8dGQvPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgPC90ZXh0PgogICAgICAgICAgPGVudHJ5PgogICAgICAgICAgICA8YWN0IGNsYXNzQ29kZT0iQUNUIiBtb29kQ29kZT0iRVZOIj4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4xLjI3Ii8+CiAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMy44OC4xMS4zMi42Ii8+CiAgICAgICAgICAgICAgPGlkIHJvb3Q9IjJDNzQ4MTcyLTdDQzItNDkwMi04QUYwLTIzQTEwNUM0NDAxQiIvPgogICAgICAgICAgICAgIDxjb2RlIG51bGxGbGF2b3I9Ik5BIi8+CiAgICAgICAgICAgICAgPGVudHJ5UmVsYXRpb25zaGlwIHR5cGVDb2RlPSJTVUJKIj4KICAgICAgICAgICAgICAgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuMTgiLz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iNDE0Mjg1MDAxIiBkaXNwbGF5TmFtZT0iRm9vZCBBbGxlcmd5IiBjb2RlU3lzdGVtTmFtZT0iU05PTUVEIENUIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2Ii8+CiAgICAgICAgICAgICAgICAgIDxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPgogICAgICAgICAgICAgICAgICA8ZWZmZWN0aXZlVGltZT4KICAgICAgICAgICAgICAgICAgICA8bG93IHZhbHVlPSIyMDA2MTAxMCIvPgogICAgICAgICAgICAgICAgICAgIDxoaWdoIG51bGxGbGF2b3I9IlVOSyIvPgogICAgICAgICAgICAgICAgICA8L2VmZmVjdGl2ZVRpbWU+CiAgICAgICAgICAgICAgICAgIDxwYXJ0aWNpcGFudCB0eXBlQ29kZT0iQ1NNIj4KICAgICAgICAgICAgICAgICAgICA8cGFydGljaXBhbnRSb2xlIGNsYXNzQ29kZT0iTUFOVSI+CiAgICAgICAgICAgICAgICAgICAgICA8cGxheWluZ0VudGl0eSBjbGFzc0NvZGU9Ik1NQVQiPgogICAgICAgICAgICAgICAgICAgICAgICA8Y29kZSBjb2RlPSIiIGRpc3BsYXlOYW1lPSJMYWN0b3NlIiBjb2RlU3lzdGVtTmFtZT0iUnhOb3JtIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljg4Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgIDxuYW1lPkxhY3Rvc2U8L25hbWU+CiAgICAgICAgICAgICAgICAgICAgICA8L3BsYXlpbmdFbnRpdHk+CiAgICAgICAgICAgICAgICAgICAgPC9wYXJ0aWNpcGFudFJvbGU+CiAgICAgICAgICAgICAgICAgIDwvcGFydGljaXBhbnQ+CiAgICAgICAgICAgICAgICA8L29ic2VydmF0aW9uPgogICAgICAgICAgICAgIDwvZW50cnlSZWxhdGlvbnNoaXA+CiAgICAgICAgICAgIDwvYWN0PgogICAgICAgICAgPC9lbnRyeT4KICAgICAgICAgIDxlbnRyeT4KICAgICAgICAgICAgPGFjdCBjbGFzc0NvZGU9IkFDVCIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4yNyIvPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEuMzIuNiIvPgogICAgICAgICAgICAgIDxpZCByb290PSIyQzc0ODE3Mi03Q0MyLTQ5MDItOEFGMC0yM0ExMDVDNDQwMUIiLz4KICAgICAgICAgICAgICA8Y29kZSBudWxsRmxhdm9yPSJOQSIvPgogICAgICAgICAgICAgIDxlbnRyeVJlbGF0aW9uc2hpcCB0eXBlQ29kZT0iU1VCSiI+CiAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4xLjE4Ii8+CiAgICAgICAgICAgICAgICAgIDxjb2RlIGNvZGU9IjQxNjA5ODAwMiIgZGlzcGxheU5hbWU9IkRydWcgQWxsZXJneSIgY29kZVN5c3RlbU5hbWU9IlNOT01FRCBDVCIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi45NiIvPgogICAgICAgICAgICAgICAgICA8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICAgICAgPGVmZmVjdGl2ZVRpbWU+CiAgICAgICAgICAgICAgICAgICAgPGxvdyB2YWx1ZT0iMTk5MDEyMTUiLz4KICAgICAgICAgICAgICAgICAgICA8aGlnaCBudWxsRmxhdm9yPSJVTksiLz4KICAgICAgICAgICAgICAgICAgPC9lZmZlY3RpdmVUaW1lPgogICAgICAgICAgICAgICAgICA8cGFydGljaXBhbnQgdHlwZUNvZGU9IkNTTSI+CiAgICAgICAgICAgICAgICAgICAgPHBhcnRpY2lwYW50Um9sZSBjbGFzc0NvZGU9Ik1BTlUiPgogICAgICAgICAgICAgICAgICAgICAgPHBsYXlpbmdFbnRpdHkgY2xhc3NDb2RlPSJNTUFUIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iIiBkaXNwbGF5TmFtZT0iUGVuaWNpbGxpbiIgY29kZVN5c3RlbU5hbWU9IlJ4Tm9ybSIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi44OCIvPgogICAgICAgICAgICAgICAgICAgICAgICA8bmFtZT5QZW5pY2lsbGluPC9uYW1lPgogICAgICAgICAgICAgICAgICAgICAgPC9wbGF5aW5nRW50aXR5PgogICAgICAgICAgICAgICAgICAgIDwvcGFydGljaXBhbnRSb2xlPgogICAgICAgICAgICAgICAgICA8L3BhcnRpY2lwYW50PgogICAgICAgICAgICAgICAgPC9vYnNlcnZhdGlvbj4KICAgICAgICAgICAgICA8L2VudHJ5UmVsYXRpb25zaGlwPgogICAgICAgICAgICA8L2FjdD4KICAgICAgICAgIDwvZW50cnk+CiAgICAgICAgPC9zZWN0aW9uPgogICAgICA8L2NvbXBvbmVudD4KICAgICAgPGNvbXBvbmVudD4KICAgICAgICA8c2VjdGlvbj4KICAgICAgICAgIDx0ZW1wbGF0ZUlkIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS44Ii8+CiAgICAgICAgICA8Y29kZSBjb2RlPSIxMDE2MC0wIiBkaXNwbGF5TmFtZT0iSGlzdG9yeSBvZiBtZWRpY2F0aW9uIHVzZSIgY29kZVN5c3RlbU5hbWU9IkxPSU5DIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42LjEiLz4KICAgICAgICAgIDx0aXRsZT5NZWRpY2F0aW9uczwvdGl0bGU+CiAgICAgICAgICA8dGV4dD4KICAgICAgICAgICAgPHRhYmxlIGJvcmRlcj0iMSIgd2lkdGg9IjEwMCUiPgogICAgICAgICAgICAgIDx0aGVhZD4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgPHRoPlByb2R1Y3QgRGlzcGxheSBOYW1lPC90aD4KICAgICAgICAgICAgICAgICAgPHRoPkZyZWUgVGV4dCBCcmFuZCBOYW1lPC90aD4KICAgICAgICAgICAgICAgICAgPHRoPk9yZGVyZWQgVmFsdWU8L3RoPgogICAgICAgICAgICAgICAgICA8dGg+T3JkZXJlZCBVbml0PC90aD4KICAgICAgICAgICAgICAgICAgPHRoPkV4cGlyYXRpb24gVGltZTwvdGg+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRlbnQgSUQ9Im1lZGljYXRpb24tODA5OTgzMzQwIj5RdWV0aWFwaW5lIDI1TUc8L2NvbnRlbnQ+CiAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZC8+CiAgICAgICAgICAgICAgICAgIDx0ZC8+CiAgICAgICAgICAgICAgICAgIDx0ZC8+CiAgICAgICAgICAgICAgICAgIDx0ZC8+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRlbnQgSUQ9Im1lZGljYXRpb24tODA5OTgzMzQxIj5MaXNpbm9wcmlsIDIwTUc8L2NvbnRlbnQ+CiAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZC8+CiAgICAgICAgICAgICAgICAgIDx0ZC8+CiAgICAgICAgICAgICAgICAgIDx0ZC8+CiAgICAgICAgICAgICAgICAgIDx0ZC8+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgPGNvbnRlbnQgSUQ9Im1lZGljYXRpb24tODA5OTgzMzQyIj5TZXJ0cmFsaW5lIDUwTUc8L2NvbnRlbnQ+CiAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgIDx0ZC8+CiAgICAgICAgICAgICAgICAgIDx0ZC8+CiAgICAgICAgICAgICAgICAgIDx0ZC8+CiAgICAgICAgICAgICAgICAgIDx0ZC8+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICA8L3RleHQ+CiAgICAgICAgICA8ZW50cnk+CiAgICAgICAgICAgIDxzdWJzdGFuY2VBZG1pbmlzdHJhdGlvbiBjbGFzc0NvZGU9IlNCQURNIiBtb29kQ29kZT0iRVZOIj4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJDQ0QiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuMjQiLz4KICAgICAgICAgICAgICA8dGVtcGxhdGVJZCBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUC9DMzIiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEuMzIuOCIvPgogICAgICAgICAgICAgIDxpZC8+CiAgICAgICAgICAgICAgPGNvbnN1bWFibGU+CiAgICAgICAgICAgICAgICA8bWFudWZhY3R1cmVkUHJvZHVjdCBjbGFzc0NvZGU9Ik1BTlUiPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJDQ0QiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjEwLjIwLjEuNTMiLz4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSElUU1AvQzMyIiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjMyLjkiLz4KICAgICAgICAgICAgICAgICAgPG1hbnVmYWN0dXJlZE1hdGVyaWFsIGNsYXNzQ29kZT0iTU1BVCIgZGV0ZXJtaW5lckNvZGU9IktJTkQiPgogICAgICAgICAgICAgICAgICA8L21hbnVmYWN0dXJlZE1hdGVyaWFsPgogICAgICAgICAgICAgICAgPC9tYW51ZmFjdHVyZWRQcm9kdWN0PgogICAgICAgICAgICAgIDwvY29uc3VtYWJsZT4KICAgICAgICAgICAgICA8ZW50cnlSZWxhdGlvbnNoaXAgdHlwZUNvZGU9IlNVQkoiPgogICAgICAgICAgICAgICAgPG9ic2VydmF0aW9uIGNsYXNzQ29kZT0iT0JTIiBtb29kQ29kZT0iRVZOIj4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMy44OC4xMS4zMi4xMCIvPgogICAgICAgICAgICAgICAgICA8Y29kZSBjb2RlPSI3MzYzOTAwMCIgZGlzcGxheU5hbWU9IlByZXNjcmlwdGlvbiBEcnVnIiBjb2RlU3lzdGVtTmFtZT0iU05PTUVEIENUIiBjb2RlU3lzdGVtPSIyLjE2Ljg0MC4xLjExMzg4My42Ljk2Ii8+CiAgICAgICAgICAgICAgICAgIDxzdGF0dXNDb2RlIGNvZGU9ImNvbXBsZXRlZCIvPgogICAgICAgICAgICAgICAgPC9vYnNlcnZhdGlvbj4KICAgICAgICAgICAgICA8L2VudHJ5UmVsYXRpb25zaGlwPgogICAgICAgICAgICA8L3N1YnN0YW5jZUFkbWluaXN0cmF0aW9uPgogICAgICAgICAgPC9lbnRyeT4KICAgICAgICAgIDxlbnRyeT4KICAgICAgICAgICAgPHN1YnN0YW5jZUFkbWluaXN0cmF0aW9uIGNsYXNzQ29kZT0iU0JBRE0iIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS4yNCIvPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkhJVFNQL0MzMiIgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMy44OC4xMS4zMi44Ii8+CiAgICAgICAgICAgICAgPGlkLz4KICAgICAgICAgICAgICA8Y29uc3VtYWJsZT4KICAgICAgICAgICAgICAgIDxtYW51ZmFjdHVyZWRQcm9kdWN0IGNsYXNzQ29kZT0iTUFOVSI+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkNDRCIgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMTAuMjAuMS41MyIvPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCBhc3NpZ25pbmdBdXRob3JpdHlOYW1lPSJISVRTUC9DMzIiIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEuMzIuOSIvPgogICAgICAgICAgICAgICAgICA8bWFudWZhY3R1cmVkTWF0ZXJpYWwgY2xhc3NDb2RlPSJNTUFUIiBkZXRlcm1pbmVyQ29kZT0iS0lORCI+CiAgICAgICAgICAgICAgICAgIDwvbWFudWZhY3R1cmVkTWF0ZXJpYWw+CiAgICAgICAgICAgICAgICA8L21hbnVmYWN0dXJlZFByb2R1Y3Q+CiAgICAgICAgICAgICAgPC9jb25zdW1hYmxlPgogICAgICAgICAgICAgIDxlbnRyeVJlbGF0aW9uc2hpcCB0eXBlQ29kZT0iU1VCSiI+CiAgICAgICAgICAgICAgICA8b2JzZXJ2YXRpb24gY2xhc3NDb2RlPSJPQlMiIG1vb2RDb2RlPSJFVk4iPgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGVJZCByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjMyLjEwIi8+CiAgICAgICAgICAgICAgICAgIDxjb2RlIGNvZGU9IjczNjM5MDAwIiBkaXNwbGF5TmFtZT0iUHJlc2NyaXB0aW9uIERydWciIGNvZGVTeXN0ZW1OYW1lPSJTTk9NRUQgQ1QiIGNvZGVTeXN0ZW09IjIuMTYuODQwLjEuMTEzODgzLjYuOTYiLz4KICAgICAgICAgICAgICAgICAgPHN0YXR1c0NvZGUgY29kZT0iY29tcGxldGVkIi8+CiAgICAgICAgICAgICAgICA8L29ic2VydmF0aW9uPgogICAgICAgICAgICAgIDwvZW50cnlSZWxhdGlvbnNoaXA+CiAgICAgICAgICAgIDwvc3Vic3RhbmNlQWRtaW5pc3RyYXRpb24+CiAgICAgICAgICA8L2VudHJ5PgogICAgICAgICAgPGVudHJ5PgogICAgICAgICAgICA8c3Vic3RhbmNlQWRtaW5pc3RyYXRpb24gY2xhc3NDb2RlPSJTQkFETSIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4xLjI0Ii8+CiAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iSElUU1AvQzMyIiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4zLjg4LjExLjMyLjgiLz4KICAgICAgICAgICAgICA8aWQvPgogICAgICAgICAgICAgIDxjb25zdW1hYmxlPgogICAgICAgICAgICAgICAgPG1hbnVmYWN0dXJlZFByb2R1Y3QgY2xhc3NDb2RlPSJNQU5VIj4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlSWQgYXNzaWduaW5nQXV0aG9yaXR5TmFtZT0iQ0NEIiByb290PSIyLjE2Ljg0MC4xLjExMzg4My4xMC4yMC4xLjUzIi8+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIGFzc2lnbmluZ0F1dGhvcml0eU5hbWU9IkhJVFNQL0MzMiIgcm9vdD0iMi4xNi44NDAuMS4xMTM4ODMuMy44OC4xMS4zMi45Ii8+CiAgICAgICAgICAgICAgICAgIDxtYW51ZmFjdHVyZWRNYXRlcmlhbCBjbGFzc0NvZGU9Ik1NQVQiIGRldGVybWluZXJDb2RlPSJLSU5EIj4KICAgICAgICAgICAgICAgICAgPC9tYW51ZmFjdHVyZWRNYXRlcmlhbD4KICAgICAgICAgICAgICAgIDwvbWFudWZhY3R1cmVkUHJvZHVjdD4KICAgICAgICAgICAgICA8L2NvbnN1bWFibGU+CiAgICAgICAgICAgICAgPGVudHJ5UmVsYXRpb25zaGlwIHR5cGVDb2RlPSJTVUJKIj4KICAgICAgICAgICAgICAgIDxvYnNlcnZhdGlvbiBjbGFzc0NvZGU9Ik9CUyIgbW9vZENvZGU9IkVWTiI+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZUlkIHJvb3Q9IjIuMTYuODQwLjEuMTEzODgzLjMuODguMTEuMzIuMTAiLz4KICAgICAgICAgICAgICAgICAgPGNvZGUgY29kZT0iNzM2MzkwMDAiIGRpc3BsYXlOYW1lPSJQcmVzY3JpcHRpb24gRHJ1ZyIgY29kZVN5c3RlbU5hbWU9IlNOT01FRCBDVCIgY29kZVN5c3RlbT0iMi4xNi44NDAuMS4xMTM4ODMuNi45NiIvPgogICAgICAgICAgICAgICAgICA8c3RhdHVzQ29kZSBjb2RlPSJjb21wbGV0ZWQiLz4KICAgICAgICAgICAgICAgIDwvb2JzZXJ2YXRpb24+CiAgICAgICAgICAgICAgPC9lbnRyeVJlbGF0aW9uc2hpcD4KICAgICAgICAgICAgPC9zdWJzdGFuY2VBZG1pbmlzdHJhdGlvbj4KICAgICAgICAgIDwvZW50cnk+CiAgICAgICAgPC9zZWN0aW9uPgogICAgICA8L2NvbXBvbmVudD4KICAgIDwvc3RydWN0dXJlZEJvZHk+CiAgPC9jb21wb25lbnQ+CjwvQ2xpbmljYWxEb2N1bWVudD4K</xdsb:Document></xdsb:DocumentResponse></xdsb:RetrieveDocumentSetResponse>
homeCommunityID = urn:oid:1.3.6.1.4.1.21367.2009.1.2.2020
HomeCommunityID in response - OK!
...Fail


---------------------------------  Error Summary  ------------------------------

["12301v2"] ***************
	step ****** : retrieve_small
	transaction : XCAIGRetrieveTransaction
	Endpoint    : http://localhost:8080/axis2/services/xcaig
	Error is    : Status is urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Failure, expected status is urn:oasis:names:tc:ebxml-regrep:ResponseStatusType:Success
	Details : XDSUnknownRepositoryId : RepositoryUniqueId XXXXXXXX not known by local community
	Details : XDSMissingHomeCommunityId : homeCommunityId missing or empty
